{"mappings":"ACAA,CAAA,SAA2CA,CAAAA,EAAMC,CAAAA;IAChD,IAAsB,YAAA,OAAZC,WAA0C,YAAA,OAAXC,QACxCA,OAAOD,OAAAA,GAAUD;SACb,IAAqB,cAAA,OAAXG,UAAyBA,OAAOC,GAAAA,EAC9CD,OAAO,EAAA,EAAIH;SACP;QACJ,IAAIK,IAAIL;QACR,IAAI,IAAIM,KAAKD,EAAAA,AAAuB,CAAA,YAAA,OAAZJ,UAAuBA,UAAUF,CAAAA,CAAAA,CAAMO,EAAAA,GAAKD,CAAAA,CAAEC,EACvE;IAAA;AACA,EAAEC,MAAM,I,A,C;Q;Q,I,I;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,oB,G,K;gBCJT,MAAA,IAAA,EAAA,OAEA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA;gBAUO,IAAMC,IAAoB,EAAA,oBAAA,GAA1B,cAAmC,EAAAC,UAAAA;oBA4BxC,YACmBE,CAAAA,EACD,CAAA,CAAA;wBAEhBC,KAAAA,IAHiB,IAAA,CAAAD,SAAAA,GAAAA,GACgB,IAAA,CAAAE,cAAAA,GAAAA,GAvB3B,IAAA,CAAAC,oBAAAA,GAA+B,GAiB/B,IAAA,CAAAC,eAAAA,GAA4B,EAAA,EAE5B,IAAA,CAAAC,gBAAAA,GAA2B,IAOjCC,IAAAA,CAAKC,uBAAAA,GAA0BC,SAASC,aAAAA,CAAc,QACtDH,IAAAA,CAAKC,uBAAAA,CAAwBG,SAAAA,CAAUC,GAAAA,CAAI,wBAE3CL,IAAAA,CAAKM,aAAAA,GAAgBJ,SAASC,aAAAA,CAAc,QAC5CH,IAAAA,CAAKM,aAAAA,CAAc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KI,GAAAA,CAAIF,GAAIC,GAAIzB;oBACxB;oBAEO,OAAOwB,CAAAA,EAAYC,CAAAA,EAAAA;wBACxB,OAAO/I,IAAAA,CAAK4I,IAAAA,CAAKM,GAAAA,CAAIJ,GAAIC;oBAC3B;oBAEO,SAASD,CAAAA,EAAYC,CAAAA,EAAYzB,CAAAA,EAAAA;wBACtCtH,IAAAA,CAAK0I,MAAAA,CAAOM,GAAAA,CAAIF,GAAIC,GAAIzB;oBAC1B;oBAEO,SAASwB,CAAAA,EAAYC,CAAAA,EAAAA;wBAC1B,OAAO/I,IAAAA,CAAK0I,MAAAA,CAAOQ,GAAAA,CAAIJ,GAAIC;oBAC7B;oBAEO,QAAAM;wBACLrJ,IAAAA,CAAK0I,MAAAA,CAAOW,KAAAA,IACZrJ,IAAAA,CAAK4I,IAAAA,CAAKS,KAAAA;oBACZ;gBAAA;Y;Y,M,C,G;gB,O,c,C,G,c;oB,O,C;gB,I,E,wB,G,K,GCjBF,EAAA,wBAAA,GAAA,SACEC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAC,CAAAA;oBAEAH,EAAKtI,gBAAAA,CAAiBuI,GAAMC,GAASC;oBACrC,IAAIC,IAAAA,CAAW;oBACf,OAAO;wBACLC,SAAS;4BACHD,KAGJA,CAAAA,IAAAA,CAAW,GACXJ,EAAK/D,mBAAAA,CAAoBgE,GAAMC,GAASC,EAAAA;wBAAQ;oBAAA;gBAGtD;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,U,G,K;gBC3BA,MAAA,IAAA,EAAA,OAEA,IAAA,EAAA,OACA,IAAA,EAAA,MAEA,IAAA,EAAA;gBAGO,IAAMG,IAAU,EAAA,UAAA,GAAhB,cAAyB,EAAApK,UAAAA;oBAK9B,IAAA,cAA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C3I,MAAjB7K,IAAAA,CAAK2T,OAAAA,IAAAA,KAA4C9I,MAAnB7K,IAAAA,CAAKuT,SAAAA,EACrE;wBAIF,MAAMvR,IAAQyR,KAAKG,GAAAA,CAAI5T,IAAAA,CAAKwT,SAAAA,EAAW,IACjCvR,IAAMwR,KAAKC,GAAAA,CAAI1T,IAAAA,CAAK2T,OAAAA,EAAS3T,IAAAA,CAAKuT,SAAAA,GAAY;wBAGpDvT,IAAAA,CAAKwT,SAAAA,GAAAA,KAAY3I,GACjB7K,IAAAA,CAAK2T,OAAAA,GAAAA,KAAU9I,GAGf7K,IAAAA,CAAK6S,eAAAA,CAAgB7Q,GAAOC;oBAC9B;gBAAA;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,Q,G,K;gBC9EF,MAAA,IAAA,EAAA,OAGA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MAEA,IAAA,EAAA;gBAcO,IAAM2b,IAAQ,EAAA,QAAA,GAAd,cAAuB,EAAApe,UAAAA;oBA4B5B,YACmB0c,CAAAA,EACAyK,CAAAA,EACD,CAAA,EACC,CAAA,EACC,CAAA,EACF,CAAA,EACK,CAAA,EACNC,CAAAA,CAAAA;wBAEfjnB,KAAAA,IATiB,IAAA,CAAAuc,gBAAAA,GAAAA,GACA,IAAA,CAAAyK,WAAAA,GAAAA,GACgB,IAAA,CAAA5c,cAAAA,GAAAA,GACC,IAAA,CAAAyG,eAAAA,GAAAA,GACC,IAAA,CAAAkM,gBAAAA,GAAAA,GACF,IAAA,CAAA9c,cAAAA,GAAAA,GACK,IAAA,CAAA0c,mBAAAA,GAAAA,GAlCjC,IAAA,CAAAuK,cAAAA,GAAyB,GACxB,IAAA,CAAAC,iBAAAA,GAA4B,GAC5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B,EAAGmZ,QAAAA,GACrB7C,IAAS9d,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW0jB,qBAAAA,GAAwB7qB,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW2jB,iBAAAA,GAGnGhN,IAAS9d,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW2jB,iBAClD;oBAAA;oBAMO,iBAAiBtjB,CAAAA,EAAAA;wBACtBxH,IAAAA,CAAKmnB,WAAAA,GAAc3f,EAAGujB,OAAAA,CAAQ,EAAA,CAAGC,KACnC;oBAAA;oBAMO,gBAAgBxjB,CAAAA,EAAAA;wBACrB,MAAM2Y,IAASngB,IAAAA,CAAKmnB,WAAAA,GAAc3f,EAAGujB,OAAAA,CAAQ,EAAA,CAAGC,KAAAA;wBAEhD,OADAhrB,IAAAA,CAAKmnB,WAAAA,GAAc3f,EAAGujB,OAAAA,CAAQ,EAAA,CAAGC,KAAAA,EAClB,MAAX7K,KAGJngB,CAAAA,IAAAA,CAAKkc,gBAAAA,CAAiB2M,SAAAA,IAAa1I,GAC5BngB,IAAAA,CAAKspB,aAAAA,CAAc9hB,GAAI2Y,EAAAA;oBAChC;gBAAA;gB,E,Q,GArXWvC,IAAQ,EAAA;oBA+BhB,EAAA,GAAA,EAAAvN,cAAAA;oBACA,EAAA,GAAA,EAAAqC,eAAAA;oBACA,EAAA,GAAA,EAAAkK,gBAAAA;oBACA,EAAA,GAAA,EAAApW,cAAAA;oBACA,EAAA,GAAA,EAAAiW,mBAAAA;oBACA,EAAA,GAAA,EAAAK,aAAAA;iBAAAA,EApCQc;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,wB,G,K;gBCrBb,MAAA,IAAA,EAAA,OACA,IAAA,EAA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Ae5B,EAAWO,MAAAA,CAAOtb,IAAAA;4BAAAA,IAEnC3Q,IAAAA,CAAKysB,SAAAA,CAAUxoB,IAAAA,CAAKjE,IAAAA,CAAKwsB,MAAAA,CAAOxsB,IAAAA,CAAKwsB,MAAAA,CAAOvrB,MAAAA,GAAS,EAAA,GACrDjB,IAAAA,CAAK0sB,cAAAA;wB;oBACP;oBAEO,WAAWc,CAAAA,EAAAA;wBAChBxtB,IAAAA,CAAK2sB,YAAAA,GAAea;oBACtB;oBAEQ,oBAAoBC,CAAAA,EAAkB9c,CAAAA,EAAAA;wBAC5C,OACEA,KAAQ8c,EAAKJ,eAAAA,IACb1c,KAAQ8c,EAAKH,aAEjB;oBAAA;oBAEQ,oBAAoBG,CAAAA,EAAkB9c,CAAAA,EAAc9L,CAAAA,EAAAA;wBAC1D,OACG8L,KAAQ8c,EAAKJ,eAAAA,GAAkBrtB,IAAAA,CAAK2sB,YAAAA,CAAa9nB,KAAY,OAAA,IAC7D8L,KAAQ8c,EAAKH,aAAAA,GAAgBttB,IAAAA,CAAK2sB,YAAAA,CAAa9nB,KAAY,OAEhE;oBAAA;oBAEQ,eAAe4oB,CAAAA,EAAkB9c,CAAAA,EAAAA;wBACvC8c,EAAKJ,eAAAA,GAAkB5Z,KAAKC,GAAAA,CAAI+Z,EAAKJ,eAAAA,EAAiB1c,IACtD8c,EAAKH,aAAAA,GAAgB7Z,KAAKG,GAAAA,CAAI6Z,EAAKH,aAAAA,EAAe3c;oBACpD;gBAAA;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,qB,G,K;gBC9GF,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA,OAIM+c,IAAa;oBACjBd,MAAM;oBACNhlB,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GT/S,CAAAA,IAAAA,CAAK+S,eAAAA,GAAkB/S,IAAAA,CAAK8tB,kBAAAA,CAAmB5qB,MAAAA,CAAOgQ,qBAAAA,CAAsB;4BAC1ElT,IAAAA,CAAKyvB,mBAAAA,IACLzvB,IAAAA,CAAK+S,eAAAA,GAAAA,KAAkBlI;wBAAS,EAAA;oBAEpC;gBAAA;gB,E,qB,GAzLW0U,IAAqB,EAAA;oBAkB7B,EAAA,GAAA,EAAAlP,cAAAA;oBACA,EAAA,GAAA,EAAAsG,kBAAAA;oBACA,EAAA,GAAA,EAAAnQ,cAAAA;oBACA,EAAA,GAAA,EAAAkM,eAAAA;oBACA,EAAA,GAAA,EAAA+J,mBAAAA;iBAAAA,EAtBQ8C;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,iB,G,K;gBC3Bb,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA;gBAYO,IAAMlC,IAAiB,EAAA,iBAAA,GAAvB;oBAML,IAAA,cAAW3D;wBAAyB,OAAO1Z,IAAAA,CAAKiwB,YAAc;oBAAA;oBAkB9D,YACmBC,CAAAA,EACA9S,CAAAA,EACgBrT,CAAAA,EACCyG,CAAAA,EACH2f,CAAAA,EACEvwB,CAAAA,CAAAA;wBALhB,IAAA,CAAAswB,SAAAA,GAAAA,GACA,IAAA,CAAA9S,gBAAAA,GAAAA,GACgB,IAAA,CAAArT,cAAAA,GAAAA,GACC,IAAA,CAAAyG,eAAAA,GAAAA,GACH,IAAA,CAAA2f,YAAAA,GAAAA,GACE,IAAA,CAAAvwB,cAAAA,GAAAA,GAEjCI,IAAAA,CAAKiwB,YAAAA,GAAAA,CAAe,GACpBjwB,IAAAA,CAAKowB,qBAAAA,GAAAA,CAAwB,GAC7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AS+Q,GAAWJ;gBACjD;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,W,G,K;gBCtCA,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OAEA,IAAA,EAAA,OAEA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA,OAGM0B,IAAwB,6BACxBC,IAAsB,cACtBC,IAAkB,aAClBC,IAAkB,aAClBC,IAAc,eACdC,IAAkB;gBAExB,IAAIC,IAAiB,GAQR5U,IAAW,EAAA,WAAA,GAAjB,cAA0B,EAAAlgB,UAAAA;oBAe/B,YACmB+L,CAAAA,EACA0f,CAAAA,EACA/O,CAAAA,EACAqY,CAAAA,EACMC,CAAAA,EACL,CAAA,EACD,CAAA,EACD,CAAA,EACK,CAAA,EACN,CAAA,CAAA;wBAEf70B,KAAAA,IAXiB,IAAA,CAAA4L,QAAAA,GAAAA,GACA,IAAA,CAAA0f,cAAAA,GAAAA,GACA,IAAA,CAAA/O,gBAAAA,GAAAA,GACA,IAAA,CAAAqY,WAAAA,GAAAA,GAEkB,IAAA,CAAA7X,gBAAAA,GAAAA,GACD,IAAA,CAAAlM,eAAAA,GAAAA,GACD,IAAA,CAAAzG,cAAAA,GAAAA,GACK,IAAA,CAAAuS,mBAAAA,GAAAA,GACN,IAAA,CAAA5E,aAAAA,GAAAA,GAvB1B,IAAA,CAAA+c,cAAAA,GAAyBH,KAKzB,IAAA,CAAA9zB,YAAAA,GAA8B,EAAA,EAMtB,IAAA,CAAAge,eAAAA,GAAkBxe,IAAAA,CAAKqB,QAAAA,CAAS,IAAI,EAAAiJ,YAAAA,EAAqCE,KAAAA,EAevFxK,IAAAA,CAAKM,aAAAA,GAAgBJ,SAASC,aAAAA,CAAc,QAC5CH,IAAAA,CAAKM,aAAAA,CAAcF,SAAAA,CAAUC,GAAAA,CAAI4zB,IACjCj0B,IAAAA,CAAKM,aAAAA,CAAc+F,KAAAA,CAAM+T,UAAAA,GAAa,UACtCpa,IAAAA,CAAKM,aAAAA,CAAcC,YAAAA,CAAa,eAAe,SAC/CP,IAAAA,CAAK00B,mBAAAA,CAAoB10B,IAAAA,CAAK+J,cAAAA,CAAe6D,IAAAA,EAAM5N,IAAAA,CAAK+J,cAAAA,CAAetJ,IAAAA,GACvET,IAAAA,CAAK20B,mBAAAA,GAAsBz0B,SAASC,aAAAA,CAAc,QAClDH,IAAAA,CAAK20B,mBAAAA,CAAoBv0B,SAAAA,CAAUC,GAAAA,CAAIg0B,IACvCr0B,IAAAA,CAAK20B,mBAAAA,CAAoBp0B,YAAAA,CAAa,eAAe,SAErDP,IAAAA,CAAKiG,UAAAA,GAAAA,AAAa,CAAA,GAAA,EAAA2uB,sBAAAA,AAAAA,KAClB50B,IAAAA,CAAK60B,iBAAAA,IACL70B,IAAAA,CAAKqB,QAAAA,CAASrB,IAAAA,CAAKwQ,eAAAA,CAAgBskB,cAAAA,CAAe,IAAM90B,IAAAA,CAAK+0B,qBAAAA,MAE7D/0B,IAAAA,CAAKqB,QAAAA,CAASrB,IAAAA,CAAK0X,aAAAA,CAAcyQ,cAAAA,CAAetnB,CAAAA,IAAKb,IAAAA,CAAKg1B,UAAAA,CAAWn0B,MACrEb,IAAAA,CAAKg1B,UAAAA,CAAWh1B,IAAAA,CAAK0X,aAAAA,CAAcO,MAAAA,GAEnCjY,IAAAA,CAAKi1B,WAAAA,GAAcT,EAAqBje,cAAAA,CAAe,EAAA2e,qBAAAA,EAAuBh1B,WAE9EF,IAAAA,CAAKuL,QAAAA,CAASnL,SAAAA,CAAUC,GAAAA,CAAI2zB,IAAwBh0B,IAAAA,CAAKy0B,cAAAA,GACzDz0B,IAAAA,CAAKirB,cAAAA,CAAetqB,WAAAA,CAAYX,IAAAA,CAAKM,aAAAA,GACrCN,IAAAA,CAAKirB,cAAAA,CAAetqB,WAAAA,CAAYX,IAAAA,CAAK20B,mBAAAA,GAErC30B,IAAAA,CAAKqB,QAAAA,CAASrB,IAAAA,CAAKu0B,WAAAA,CAAYhqB,mBAAAA,CAAoB1J,CAAAA,IAAKb,IAAAA,CAAKm1B,gBAAAA,CAAiBt0B,MAC9Eb,IAAAA,CAAKqB,QAAAA,CAASrB,IAAAA,CAAKu0B,WAAAA,CAAY7pB,mBAAAA,CAAoB7J,CAAAA,IAAKb,IAAAA,CAAKo1B,gBAAAA,CAAiBv0B,MAE9Eb,IAAAA,CAAKqB,QAAAA,CAAAA,AAAS,CAAA,GAAA,EAAAgC,YAAAA,AAAAA,EAAa;4BACzBrD,IAAAA,CAAKuL,QAAAA,CAASnL,SAAAA,CAAUkD,MAAAA,CAAO0wB,IAAwBh0B,IAAAA,CAAKy0B,cAAAA,GAI5Dz0B,IAAAA,CAAKM,aAAAA,CAAcgD,MAAAA,IACnBtD,IAAAA,CAAK20B,mBAAAA,CAAoBrxB,MAAAA,IACzBtD,IAAAA,CAAKq1B,WAAAA,CAAY1rB,OAAAA,IACjB3J,IAAAA,CAAKs1B,kBAAAA,CAAmBhyB,MAAAA,IACxBtD,IAAAA,CAAKu1B,uBAAAA,CAAwBjyB,MAAAA;wBAAQ,KAGvCtD,IAAAA,CAAKq1B,WAAAA,GAAc,IAAI,EAAAG,UAAAA,CAAWt1B,WAClCF,IAAAA,CAAKq1B,WAAAA,CAAYI,OAAAA,CACfz1B,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW8pB,UAAAA,EAChCjxB,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW+pB,QAAAA,EAChClxB,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAWuuB,UAAAA,EAChC11B,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAWwuB,cAAAA,GAElC31B,IAAAA,CAAK41B,kBAAAA;oBACP;oBAEQ,oBAAAf;wBACN,MAAMpM,IAAMzoB,IAAAA,CAAKsc,mBAAAA,CAAoBmM,GAAAA;wBACrCzoB,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOpmB,IAAAA,CAAKkE,KAAAA,GAAQtG,IAAAA,CAAK0c,gBAAAA,CAAiBpW,KAAAA,GAAQmiB,GAClEzoB,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOpmB,IAAAA,CAAKgE,MAAAA,GAASqN,KAAK6b,IAAAA,CAAKtvB,IAAAA,CAAK0c,gBAAAA,CAAiBtW,MAAAA,GAASqiB,IAC9EzoB,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOriB,IAAAA,CAAKG,KAAAA,GAAQtG,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOpmB,IAAAA,CAAKkE,KAAAA,GAAQmN,KAAKmV,KAAAA,CAAM5oB,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW0uB,aAAAA,GACnH71B,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOriB,IAAAA,CAAKC,MAAAA,GAASqN,KAAKiX,KAAAA,CAAM1qB,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOpmB,IAAAA,CAAKgE,MAAAA,GAASpG,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAWiT,UAAAA,GACrHpa,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOpmB,IAAAA,CAAKwF,IAAAA,GAAO,GACnC5H,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOpmB,IAAAA,CAAK0F,GAAAA,GAAM,GAClC9H,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOjiB,MAAAA,CAAOD,KAAAA,GAAQtG,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOriB,IAAAA,CAAKG,KAAAA,GAAQtG,IAAAA,CAAK+J,cAAAA,CAAe6D,IAAAA,EAC9F5N,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOjiB,MAAAA,CAAOH,MAAAA,GAASpG,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOriB,IAAAA,CAAKC,MAAAA,GAASpG,IAAAA,CAAK+J,cAAAA,CAAetJ,IAAAA,EAChGT,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIK,MAAAA,CAAOD,KAAAA,GAAQmN,KAAKmV,KAAAA,CAAM5oB,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOjiB,MAAAA,CAAOD,KAAAA,GAAQmiB,IACpFzoB,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIK,MAAAA,CAAOH,MAAAA,GAASqN,KAAKmV,KAAAA,CAAM5oB,IAAAA,CAAKiG,UAAAA,CAAWuiB,MAAAA,CAAOjiB,MAAAA,CAAOH,MAAAA,GAASqiB,IACtFzoB,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKG,KAAAA,GAAQtG,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIK,MAAAA,CAAOD,KAAAA,GAAQtG,IAAAA,CAAK+J,cAAAA,CAAe6D,IAAAA,EACxF5N,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKC,MAAAA,GAASpG,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIK,MAAAA,CAAOH,MAAAA,GAASpG,IAAAA,CAAK+J,cAAAA,CAAetJ,IAAAA;wBAE1F,KAAK,MAAMgB,KAAWzB,IAAAA,CAAKQ,YAAAA,CACzBiB,EAAQ4E,KAAAA,CAAMC,KAAAA,GAAQ,CAAA,EAAGtG,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIK,MAAAA,CAAOD,KAAAA,CAAAA,EAAAA,CAAAA,EACpD7E,EAAQ4E,KAAAA,CAAMD,MAAAA,GAAS,CAAA,EAAGpG,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKC,MAAAA,CAAAA,EAAAA,CAAAA,EACnD3E,EAAQ4E,KAAAA,CAAM+T,UAAAA,GAAa,CAAA,EAAGpa,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKC,MAAAA,CAAAA,EAAAA,CAAAA,EAEvD3E,EAAQ4E,KAAAA,CAAMyvB,QAAAA,GAAW;wBAGtB91B,IAAAA,CAAKu1B,uBAAAA,IACRv1B,CAAAA,IAAAA,CAAKu1B,uBAAAA,GAA0Br1B,SAASC,aAAAA,CAAc,UACtDH,IAAAA,CAAKirB,cAAAA,CAAetqB,WAAAA,CAAYX,IAAAA,CAAKu1B,uBAAAA,CAAAA;wBAGvC,MAAMQ,IACJ,CAAA,EAAG/1B,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB/B,EAAAA,kEAAAA,CAAAA;wBAMhCj0B,IAAAA,CAAKu1B,uBAAAA,CAAwB9xB,WAAAA,GAAcsyB,GAE3C/1B,IAAAA,CAAK20B,mBAAAA,CAAoBtuB,KAAAA,CAAMD,MAAAA,GAASpG,IAAAA,CAAKkc,gBAAAA,CAAiB7V,KAAAA,CAAMD,MAAAA,EACpEpG,IAAAA,CAAKirB,cAAAA,CAAe5kB,KAAAA,CAAMC,KAAAA,GAAQ,CAAA,EAAGtG,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIK,MAAAA,CAAOD,KAAAA,CAAAA,EAAAA,CAAAA,EAChEtG,IAAAA,CAAKirB,cAAAA,CAAe5kB,KAAAA,CAAMD,MAAAA,GAAS,CAAA,EAAGpG,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIK,MAAAA,CAAOH,MAAAA,CAAAA,EAAAA,CACnE;oBAAA;oBAEQ,WAAW6R,CAAAA,EAAAA;wBACZjY,IAAAA,CAAKs1B,kBAAAA,IACRt1B,CAAAA,IAAAA,CAAKs1B,kBAAAA,GAAqBp1B,SAASC,aAAAA,CAAc,UACjDH,IAAAA,CAAKirB,cAAAA,CAAetqB,WAAAA,CAAYX,IAAAA,CAAKs1B,kBAAAA,CAAAA;wBAIvC,IAAIS,IACF,CAAA,EAAG/1B,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB/B,EAAAA,UAAAA,EACnBhc,EAAOge,UAAAA,CAAW/vB,GAAAA,CAAAA,eAAAA,EACZlG,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW8pB,UAAAA,CAAAA,aAAAA,EAClCjxB,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW+pB,QAAAA,CAAAA,yCAAAA,CAAAA;wBAIjD6E,KACE,CAAA,EAAG/1B,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB/B,EAAAA,qBAAAA,EACnB,EAAAlc,KAAAA,CAAMme,eAAAA,CAAgBje,EAAOge,UAAAA,EAAY,IAAK/vB,GAAAA,CAAAA,EAAAA,CAAAA,EAG3D6vB,KACE,CAAA,EAAG/1B,IAAAA,CAAKg2B,iBAAAA,CAAAA,sCAAAA,EACSh2B,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAWuuB,UAAAA,CAAAA,EAAAA,EAE9C11B,IAAAA,CAAKg2B,iBAAAA,CAAAA,gCAAAA,EACSh2B,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAWwuB,cAAAA,CAAAA,EAAAA,EAE9C31B,IAAAA,CAAKg2B,iBAAAA,CAAAA,yCAAAA,CAAAA,EAIVD,KACE,iCAAsC/1B,IAAAA,CAAKy0B,cAAAA,GAA3C,6CAKFsB,KACE,4BAAiC/1B,IAAAA,CAAKy0B,cAAAA,GAAtC,YAEA,CAAA,oBAAA,EAAuBxc,EAAOke,MAAAA,CAAOjwB,GAAAA,CAAAA,CAAAA,CAAAA,GACrC,CAAA,SAAA,EAAY+R,EAAOme,YAAAA,CAAalwB,GAAAA,CAAAA,qCAAAA,CAAAA,GAIhC,CAAA,SAAA,EAAY+R,EAAOke,MAAAA,CAAOjwB,GAAAA,CAAAA,IAAAA,CAAAA,EAI5B6vB,KACE,CAAA,EAAG/1B,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB/B,EAAAA,CAAAA,EAAuBG,EAAAA,yFAAAA,CAAAA,GACdp0B,IAAAA,CAAKy0B,cAAAA,GAD5C,4BAGA,CAAA,EAAGz0B,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB/B,EAAAA,CAAAA,EAAuBG,EAAAA,8EAAAA,CAAAA,GACnBp0B,IAAAA,CAAKy0B,cAAAA,GAJvC,4BAMA,CAAA,EAAGz0B,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB/B,EAAAA,mCAAAA,CAAAA,GAC9B,CAAA,mBAAA,EAAsBhc,EAAOke,MAAAA,CAAOjwB,GAAAA,CAAAA,CAAAA,CAAAA,GACpC,CAAA,QAAA,EAAW+R,EAAOme,YAAAA,CAAalwB,GAAAA,CAAAA,EAAAA,CAAAA,GAE/B,CAAA,EAAGlG,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB/B,EAAAA,qCAAAA,CAAAA,GAC9B,CAAA,oBAAA,EAAuBhc,EAAOke,MAAAA,CAAOjwB,GAAAA,CAAAA,wBAAAA,CAAAA,GAGrC,CAAA,EAAGlG,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB/B,EAAAA,iCAAAA,CAAAA,GAC9B,CAAA,aAAA,EAAgBj0B,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAWkvB,WAAAA,CAAAA,OAAAA,EAAqBpe,EAAOke,MAAAA,CAAOjwB,GAAAA,CAAAA,QAAAA,CAAAA,GAEnF,CAAA,EAAGlG,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB/B,EAAAA,uCAAAA,CAAAA,GAC9B,CAAA,oBAAA,EAAuBhc,EAAOke,MAAAA,CAAOjwB,GAAAA,CAAAA,wDAAAA,CAAAA,EAKvC6vB,KACE,CAAA,EAAG/1B,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB3B,EAAAA,0EAAAA,EAO3Br0B,IAAAA,CAAKg2B,iBAAAA,CAAAA,QAAAA,EAA4B3B,EAAAA,6CAAAA,EAEdpc,EAAOqe,yBAAAA,CAA0BpwB,GAAAA,CAAAA,EAAAA,EAEpDlG,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB3B,EAAAA,6CAAAA,EAERpc,EAAOse,iCAAAA,CAAkCrwB,GAAAA,CAAAA,EAAAA,CAAAA;wBAGjE,KAAK,MAAA,CAAO7G,GAAGm3B,EAAAA,IAAMve,EAAOC,IAAAA,CAAKrL,OAAAA,GAC/BkpB,KACE,CAAA,EAAG/1B,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB9B,EAAAA,EAAkB70B,EAAAA,UAAAA,EAAcm3B,EAAEtwB,GAAAA,CAAAA,GAAAA,EAC7DlG,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB9B,EAAAA,EAAkB70B,EAAAA,oBAAAA,EAAkC,EAAA0Y,KAAAA,CAAMme,eAAAA,CAAgBM,GAAG,IAAKtwB,GAAAA,CAAAA,GAAAA,EAC7GlG,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB7B,EAAAA,EAAkB90B,EAAAA,qBAAAA,EAAyBm3B,EAAEtwB,GAAAA,CAAAA,GAAAA,CAAAA;wBAE/E6vB,KACE,CAAA,EAAG/1B,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB9B,EAAAA,EAAkB,EAAAuC,sBAAAA,CAAAA,UAAAA,EAAmC,EAAA1e,KAAAA,CAAM2e,MAAAA,CAAOze,EAAOoQ,UAAAA,EAAYniB,GAAAA,CAAAA,GAAAA,EAChHlG,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB9B,EAAAA,EAAkB,EAAAuC,sBAAAA,CAAAA,oBAAAA,EAAuD,EAAA1e,KAAAA,CAAMme,eAAAA,CAAgB,EAAAne,KAAAA,CAAM2e,MAAAA,CAAOze,EAAOoQ,UAAAA,GAAa,IAAKniB,GAAAA,CAAAA,GAAAA,EAChKlG,IAAAA,CAAKg2B,iBAAAA,CAAAA,EAAAA,EAAsB7B,EAAAA,EAAkB,EAAAsC,sBAAAA,CAAAA,qBAAAA,EAA8Cxe,EAAOge,UAAAA,CAAW/vB,GAAAA,CAAAA,GAAAA,CAAAA,EAElHlG,IAAAA,CAAKs1B,kBAAAA,CAAmB7xB,WAAAA,GAAcsyB;oBACxC;oBAUQ,qBAAAH;wBAEN,MAAMe,IAAU32B,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKG,KAAAA,GAAQtG,IAAAA,CAAKq1B,WAAAA,CAAYnsB,GAAAA,CAAI,KAAA,CAAK,GAAA,CAAO;wBAClFlJ,IAAAA,CAAKM,aAAAA,CAAc+F,KAAAA,CAAMwvB,aAAAA,GAAgB,CAAA,EAAGc,EAAAA,EAAAA,CAAAA,EAC5C32B,IAAAA,CAAKi1B,WAAAA,CAAY2B,cAAAA,GAAiBD;oBACpC;oBAEO,+BAAAE;wBACL72B,IAAAA,CAAK60B,iBAAAA,IACL70B,IAAAA,CAAKq1B,WAAAA,CAAYhsB,KAAAA,IACjBrJ,IAAAA,CAAK41B,kBAAAA;oBACP;oBAEQ,oBAAoBhoB,CAAAA,EAAcnN,CAAAA,EAAAA;wBAExC,IAAK,IAAIpB,IAAIW,IAAAA,CAAKQ,YAAAA,CAAaS,MAAAA,EAAQ5B,KAAKoB,GAAMpB,IAAK;4BACrD,MAAMihB,IAAMpgB,SAASC,aAAAA,CAAc;4BACnCH,IAAAA,CAAKM,aAAAA,CAAcK,WAAAA,CAAY2f,IAC/BtgB,IAAAA,CAAKQ,YAAAA,CAAayD,IAAAA,CAAKqc;wB;wBAGzB,MAAOtgB,IAAAA,CAAKQ,YAAAA,CAAaS,MAAAA,GAASR,GAChCT,IAAAA,CAAKM,aAAAA,CAAcgF,WAAAA,CAAYtF,IAAAA,CAAKQ,YAAAA,CAAa6E,GAAAA;oBAErD;oBAEO,aAAauI,CAAAA,EAAcnN,CAAAA,EAAAA;wBAChCT,IAAAA,CAAK00B,mBAAAA,CAAoB9mB,GAAMnN,IAC/BT,IAAAA,CAAK60B,iBAAAA;oBACP;oBAEO,wBAAAiC;wBACL92B,IAAAA,CAAK60B,iBAAAA,IACL70B,IAAAA,CAAKq1B,WAAAA,CAAYhsB,KAAAA,IACjBrJ,IAAAA,CAAK41B,kBAAAA;oBACP;oBAEO,aAAAxX;wBACLpe,IAAAA,CAAKM,aAAAA,CAAcF,SAAAA,CAAUkD,MAAAA,CAAO8wB;oBACtC;oBAEO,cAAA/V;wBACLre,IAAAA,CAAKM,aAAAA,CAAcF,SAAAA,CAAUC,GAAAA,CAAI+zB,IACjCp0B,IAAAA,CAAK+2B,UAAAA,CAAW/2B,IAAAA,CAAK+J,cAAAA,CAAe5F,MAAAA,CAAO8H,CAAAA,EAAGjM,IAAAA,CAAK+J,cAAAA,CAAe5F,MAAAA,CAAO8H,CAAAA;oBAC3E;oBAEO,uBAAuBjK,CAAAA,EAAqCC,CAAAA,EAAmCyc,CAAAA,EAAAA;wBAOpG,IALA1e,IAAAA,CAAK20B,mBAAAA,CAAoBqC,eAAAA,IACzBh3B,IAAAA,CAAKi1B,WAAAA,CAAYxW,sBAAAA,CAAuBzc,GAAOC,GAAKyc,IACpD1e,IAAAA,CAAK+2B,UAAAA,CAAW,GAAG/2B,IAAAA,CAAK+J,cAAAA,CAAetJ,IAAAA,GAAO,IAAA,CAGzCuB,KAAAA,CAAUC,GACb;wBAIF,MAAMg1B,IAAmBj1B,CAAAA,CAAM,EAAA,GAAKhC,IAAAA,CAAK+J,cAAAA,CAAe5F,MAAAA,CAAOM,KAAAA,EACzDyyB,IAAiBj1B,CAAAA,CAAI,EAAA,GAAKjC,IAAAA,CAAK+J,cAAAA,CAAe5F,MAAAA,CAAOM,KAAAA,EACrD0yB,IAAyB1jB,KAAKG,GAAAA,CAAIqjB,GAAkB,IACpDG,IAAuB3jB,KAAKC,GAAAA,CAAIwjB,GAAgBl3B,IAAAA,CAAK+J,cAAAA,CAAetJ,IAAAA,GAAO;wBAGjF,IAAI02B,KAA0Bn3B,IAAAA,CAAK+J,cAAAA,CAAetJ,IAAAA,IAAQ22B,IAAuB,GAC/E;wBAIF,MAAMC,IAAmBn3B,SAAS+b,sBAAAA;wBAElC,IAAIyC,GAAkB;4BACpB,MAAM4Y,IAAat1B,CAAAA,CAAM,EAAA,GAAKC,CAAAA,CAAI,EAAA;4BAClCo1B,EAAiB12B,WAAAA,CACfX,IAAAA,CAAKu3B,uBAAAA,CAAwBJ,GAAwBG,IAAar1B,CAAAA,CAAI,EAAA,GAAKD,CAAAA,CAAM,EAAA,EAAIs1B,IAAat1B,CAAAA,CAAM,EAAA,GAAKC,CAAAA,CAAI,EAAA,EAAIm1B,IAAuBD,IAAyB;wB,OAElK;4BAEL,MAAMnE,IAAWiE,MAAqBE,IAAyBn1B,CAAAA,CAAM,EAAA,GAAK,GACpEixB,IAASkE,MAA2BD,IAAiBj1B,CAAAA,CAAI,EAAA,GAAKjC,IAAAA,CAAK+J,cAAAA,CAAe6D,IAAAA;4BACxFypB,EAAiB12B,WAAAA,CAAYX,IAAAA,CAAKu3B,uBAAAA,CAAwBJ,GAAwBnE,GAAUC;4BAE5F,MAAMuE,IAAkBJ,IAAuBD,IAAyB;4BAGxE,IAFAE,EAAiB12B,WAAAA,CAAYX,IAAAA,CAAKu3B,uBAAAA,CAAwBJ,IAAyB,GAAG,GAAGn3B,IAAAA,CAAK+J,cAAAA,CAAe6D,IAAAA,EAAM4pB,KAE/GL,MAA2BC,GAAsB;gCAEnD,MAAMnE,IAASiE,MAAmBE,IAAuBn1B,CAAAA,CAAI,EAAA,GAAKjC,IAAAA,CAAK+J,cAAAA,CAAe6D,IAAAA;gCACtFypB,EAAiB12B,WAAAA,CAAYX,IAAAA,CAAKu3B,uBAAAA,CAAwBH,GAAsB,GAAGnE;4B;wB;wBAGvFjzB,IAAAA,CAAK20B,mBAAAA,CAAoBh0B,WAAAA,CAAY02B;oBACvC;oBAQQ,wBAAwB/W,CAAAA,EAAamX,CAAAA,EAAkBC,CAAAA,EAAgBpkB,IAAmB,CAAA,EAAA;wBAChG,MAAM7R,IAAUvB,SAASC,aAAAA,CAAc;wBAKvC,OAJAsB,EAAQ4E,KAAAA,CAAMD,MAAAA,GAAYkN,IAAWtT,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKC,MAAAA,GAAvC,MACvB3E,EAAQ4E,KAAAA,CAAMyB,GAAAA,GAASwY,IAAMtgB,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKC,MAAAA,GAAlC,MACpB3E,EAAQ4E,KAAAA,CAAMuB,IAAAA,GAAU6vB,IAAWz3B,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKG,KAAAA,GAAvC,MACrB7E,EAAQ4E,KAAAA,CAAMC,KAAAA,GAAWtG,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKG,KAAAA,GAASoxB,CAAAA,IAASD,CAAAA,IAA9C,MACfh2B;oBACT;oBAEO,mBAAAyc,CAEP;oBAEQ,wBAAA6W;wBAEN/0B,IAAAA,CAAK60B,iBAAAA,IAEL70B,IAAAA,CAAKg1B,UAAAA,CAAWh1B,IAAAA,CAAK0X,aAAAA,CAAcO,MAAAA,GAEnCjY,IAAAA,CAAKq1B,WAAAA,CAAYI,OAAAA,CACfz1B,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW8pB,UAAAA,EAChCjxB,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW+pB,QAAAA,EAChClxB,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAWuuB,UAAAA,EAChC11B,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAWwuB,cAAAA,GAElC31B,IAAAA,CAAK41B,kBAAAA;oBACP;oBAEO,QAAAvsB;wBACL,KAAK,MAAMxI,KAAKb,IAAAA,CAAKQ,YAAAA,CASnBK,EAAEm2B,eAAAA;oBAEN;oBAEO,WAAWh1B,CAAAA,EAAeC,CAAAA,EAAAA;wBAC/B,MAAMkC,IAASnE,IAAAA,CAAK+J,cAAAA,CAAe5F,MAAAA,EAC7BwzB,IAAkBxzB,EAAOyV,KAAAA,GAAQzV,EAAO8H,CAAAA,EACxC6N,IAAUrG,KAAKC,GAAAA,CAAIvP,EAAO6H,CAAAA,EAAGhM,IAAAA,CAAK+J,cAAAA,CAAe6D,IAAAA,GAAO,IACxDgqB,IAAc53B,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAWywB,WAAAA,EAC9CC,IAAc73B,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW0wB,WAAAA,EAC9CC,IAAsB93B,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW2wB,mBAAAA;wBAE5D,IAAK,IAAI7rB,IAAIjK,GAAOiK,KAAKhK,GAAKgK,IAAK;4BACjC,MAAMqU,IAAMrU,IAAI9H,EAAOM,KAAAA,EACjBszB,IAAa/3B,IAAAA,CAAKQ,YAAAA,CAAayL,EAAAA,EAC/B1H,IAAWJ,EAAOE,KAAAA,CAAM6E,GAAAA,CAAIoX;4BAClC,IAAA,CAAKyX,KAAAA,CAAexzB,GAClB;4BAEFwzB,EAAWf,eAAAA,IACNh3B,IAAAA,CAAKi1B,WAAAA,CAAY+C,SAAAA,CAClBzzB,GACA+b,GACAA,MAAQqX,GACRE,GACAC,GACAhe,GACA8d,GACA53B,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKG,KAAAA,EACzBtG,IAAAA,CAAKq1B,WAAAA,EAAAA,IACJ;wB;oBAKT;oBAEA,IAAA,oBAAYW;wBACV,OAAO,CAAA,CAAA,EAAIhC,EAAAA,EAAwBh0B,IAAAA,CAAKy0B,cAAAA,CAAAA,CAC1C;oBAAA;oBAEQ,iBAAiB5zB,CAAAA,EAAAA;wBACvBb,IAAAA,CAAKi4B,iBAAAA,CAAkBp3B,EAAEoP,EAAAA,EAAIpP,EAAEsP,EAAAA,EAAItP,EAAEqP,EAAAA,EAAIrP,EAAEuP,EAAAA,EAAIvP,EAAE+M,IAAAA,EAAAA,CAAM;oBACzD;oBAEQ,iBAAiB/M,CAAAA,EAAAA;wBACvBb,IAAAA,CAAKi4B,iBAAAA,CAAkBp3B,EAAEoP,EAAAA,EAAIpP,EAAEsP,EAAAA,EAAItP,EAAEqP,EAAAA,EAAIrP,EAAEuP,EAAAA,EAAIvP,EAAE+M,IAAAA,EAAAA,CAAM;oBACzD;oBAEQ,kBAAkB5B,CAAAA,EAAWmE,CAAAA,EAAYlE,CAAAA,EAAWmE,CAAAA,EAAYxC,CAAAA,EAAcsqB,CAAAA,EAAAA;wBAiBhFjsB,IAAI,KAAGD,CAAAA,IAAI,CAAA,GACXoE,IAAK,KAAGD,CAAAA,IAAK,CAAA;wBACjB,MAAMgoB,IAAOn4B,IAAAA,CAAK+J,cAAAA,CAAetJ,IAAAA,GAAO;wBACxCwL,IAAIwH,KAAKG,GAAAA,CAAIH,KAAKC,GAAAA,CAAIzH,GAAGksB,IAAO,IAChC/nB,IAAKqD,KAAKG,GAAAA,CAAIH,KAAKC,GAAAA,CAAItD,GAAI+nB,IAAO,IAElCvqB,IAAO6F,KAAKC,GAAAA,CAAI9F,GAAM5N,IAAAA,CAAK+J,cAAAA,CAAe6D,IAAAA;wBAC1C,MAAMzJ,IAASnE,IAAAA,CAAK+J,cAAAA,CAAe5F,MAAAA,EAC7BwzB,IAAkBxzB,EAAOyV,KAAAA,GAAQzV,EAAO8H,CAAAA,EACxC6N,IAAUrG,KAAKC,GAAAA,CAAIvP,EAAO6H,CAAAA,EAAG4B,IAAO,IACpCgqB,IAAc53B,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAWywB,WAAAA,EAC9CC,IAAc73B,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW0wB,WAAAA,EAC9CC,IAAsB93B,IAAAA,CAAKwQ,eAAAA,CAAgBrJ,UAAAA,CAAW2wB,mBAAAA;wBAG5D,IAAK,IAAIz4B,IAAI4M,GAAG5M,KAAK+Q,GAAAA,EAAM/Q,EAAG;4BAC5B,MAAMihB,IAAMjhB,IAAI8E,EAAOM,KAAAA,EACjBszB,IAAa/3B,IAAAA,CAAKQ,YAAAA,CAAanB,EAAAA,EAC/B+4B,IAAaj0B,EAAOE,KAAAA,CAAM6E,GAAAA,CAAIoX;4BACpC,IAAA,CAAKyX,KAAAA,CAAeK,GAClB;4BAEFL,EAAWf,eAAAA,IACNh3B,IAAAA,CAAKi1B,WAAAA,CAAY+C,SAAAA,CAClBI,GACA9X,GACAA,MAAQqX,GACRE,GACAC,GACAhe,GACA8d,GACA53B,IAAAA,CAAKiG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKG,KAAAA,EACzBtG,IAAAA,CAAKq1B,WAAAA,EACL6C,IAAW74B,MAAM4M,IAAID,IAAI,IAAA,IACzBksB,IAAAA,AAAY74B,CAAAA,MAAM+Q,IAAKD,IAAKvC,CAAAA,IAAQ,IAAA;wB;oBAI5C;gBAAA;gB,E,W,GAvdW8R,IAAW,EAAA;oBAoBnB,EAAA,GAAA,EAAA2Y,qBAAAA;oBACA,EAAA,GAAA,EAAAzb,gBAAAA;oBACA,EAAA,GAAA,EAAAlK,eAAAA;oBACA,EAAA,GAAA,EAAArC,cAAAA;oBACA,EAAA,GAAA,EAAAoM,mBAAAA;oBACA,EAAA,GAAA,EAAAK,aAAAA;iBAAAA,EAzBQ4C;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,qB,G,K;gBC3Bb,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA,MACA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA;gBAqBO,IAAMwV,IAAqB,EAAA,qBAAA,GAA3B;oBASL,YACmBrZ,CAAAA,EACQ,CAAA,EACR,CAAA,EACI,CAAA,EACP,CAAA,EACM,CAAA,EACL,CAAA,CAAA;wBANE,IAAA,CAAAA,SAAAA,GAAAA,GACyB,IAAA,CAAAkB,uBAAAA,GAAAA,GACR,IAAA,CAAAvM,eAAAA,GAAAA,GACI,IAAA,CAAA8L,mBAAAA,GAAAA,GACP,IAAA,CAAA6T,YAAAA,GAAAA,GACM,IAAA,CAAA3Z,kBAAAA,GAAAA,GACL,IAAA,CAAAkB,aAAAA,GAAAA,GAf1B,IAAA,CAAA4gB,SAAAA,GAAsB,IAAI,EAAAxnB,QAAAA,EAI1B,IAAA,CAAAynB,iBAAAA,GAAAA,CAA6B,GAE9B,IAAA,CAAA3B,cAAAA,GAAiB;oBAUrB;oBAEI,uBAAuB50B,CAAAA,EAAqCC,CAAAA,EAAmCyc,CAAAA,EAAAA;wBACpG1e,IAAAA,CAAKw4B,eAAAA,GAAkBx2B,GACvBhC,IAAAA,CAAKy4B,aAAAA,GAAgBx2B,GACrBjC,IAAAA,CAAKu4B,iBAAAA,GAAoB7Z;oBAC3B;oBAEO,UACLna,CAAAA,EACA+b,CAAAA,EACA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OALuB,MAAnB2Y,EAASj6B,KAAAA,IAAmC,MAApBi6B,EAASn6B,MAAAA,IACnCpG,CAAAA,IAAAA,CAAKqgC,OAAAA,CAAQ/5B,KAAAA,GAAQi6B,EAASj6B,KAAAA,GAAQ,IACtCtG,IAAAA,CAAKqgC,OAAAA,CAAQj6B,MAAAA,GAASqN,KAAK6b,IAAAA,CAAKiR,EAASn6B,MAAAA,CAAAA,GAGpCpG,IAAAA,CAAKqgC,OACd;oBAAA;gBAAA;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,sB,G,E,c,G,K;gBC7FF,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA,MACA,IAAA,EAAA;gBAGA,MAAavG,UAAuB,EAAAyB,aAAAA;oBASlC,YAAYkF,CAAAA,EAAsBnG,CAAAA,EAAeh0B,CAAAA,CAAAA;wBAC/C3G,KAAAA,IANK,IAAA,CAAA+gC,OAAAA,GAAkB,GAGlB,IAAA,CAAAC,YAAAA,GAAuB,IAI5B3gC,IAAAA,CAAK+I,EAAAA,GAAK03B,EAAU13B,EAAAA,EACpB/I,IAAAA,CAAK8I,EAAAA,GAAK23B,EAAU33B,EAAAA,EACpB9I,IAAAA,CAAK2gC,YAAAA,GAAerG,GACpBt6B,IAAAA,CAAK6tB,MAAAA,GAASvnB;oBAChB;oBAEO,aAAAs6B;wBAEL,OAAO;oBACT;oBAEO,WAAA5mB;wBACL,OAAOha,IAAAA,CAAK6tB,MACd;oBAAA;oBAEO,WAAA0M;wBACL,OAAOv6B,IAAAA,CAAK2gC,YACd;oBAAA;oBAEO,UAAAzD;wBAGL,OAAO;oBACT;oBAEO,gBAAgB51B,CAAAA,EAAAA;wBACrB,MAAM,IAAI5F,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AAAA,CAAO,EAAA,EAAI,IAAI/P,IAAAA,CAAKJ,cAAAA,CAAeqG,UAAAA,CAAWC,GAAAA,CAAIK,MAAAA,CAAOH,MAAAA,GAAS,IACzF;4BACLia,KAAK5M,KAAKiX,KAAAA,CAAM3a,CAAAA,CAAO,EAAA,GAAK/P,IAAAA,CAAKJ,cAAAA,CAAeqG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKG,KAAAA;4BACpEga,KAAK7M,KAAKiX,KAAAA,CAAM3a,CAAAA,CAAO,EAAA,GAAK/P,IAAAA,CAAKJ,cAAAA,CAAeqG,UAAAA,CAAWC,GAAAA,CAAIC,IAAAA,CAAKC,MAAAA;4BACpE4F,GAAGyH,KAAKiX,KAAAA,CAAM3a,CAAAA,CAAO,EAAA;4BACrB9D,GAAGwH,KAAKiX,KAAAA,CAAM3a,CAAAA,CAAO,EAAA;wBAAA;oBAEzB;gBAAA;gB,E,Y,GApCW0N,IAAY,EAAA;oBAIpB,EAAA,GAAA,EAAAjX,cAAAA;oBACA,EAAA,GAAA,EAAAoW,gBAAAA;iBAAAA,EALQa;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,a,G,K;gBCHb,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OAGA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA,OACA,IAAA,EAAA;gBAQO,IAAMP,IAAa,EAAA,aAAA,GAAnB,cAA4B,EAAA1d,UAAAA;oBA6BjC,IAAA,aAAWyG;wBAAkC,OAAOjG,IAAAA,CAAK8iC,SAAAA,CAAUx7B,KAAAA,CAAOrB,UAAY;oBAAA;oBAEtF,YACUsN,CAAAA,EACR9L,CAAAA,EACiBR,CAA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AAAAA,KAAAA,KAAK,MAAA,KAAA,EAAE+W,WAAAA;oBACxB;oBAEO,uBAAuBrc,CAAAA,EAAqCC,CAAAA,EAAmCyc,CAAAA,EAAAA;wB,I;wBACpG1e,IAAAA,CAAKyjC,eAAAA,CAAgBzhC,KAAAA,GAAQA,GAC7BhC,IAAAA,CAAKyjC,eAAAA,CAAgBxhC,GAAAA,GAAMA,GAC3BjC,IAAAA,CAAKyjC,eAAAA,CAAgB/kB,gBAAAA,GAAmBA,GACpB,SAApB,CAAA,IAAA1e,IAAAA,CAAK8iC,SAAAA,CAAUx7B,KAAAA,AAAAA,KAAAA,KAAK,MAAA,KAAA,EAAEmX,sBAAAA,CAAuBzc,GAAOC,GAAKyc;oBAC3D;oBAEO,mBAAAR;wB,I;wBACe,SAApB,CAAA,IAAAle,IAAAA,CAAK8iC,SAAAA,CAAUx7B,KAAAA,AAAAA,KAAAA,KAAK,MAAA,KAAA,EAAE4W,gBAAAA;oBACxB;oBAEO,QAAA7U;wB,I;wBACe,SAApB,CAAA,IAAArJ,IAAAA,CAAK8iC,SAAAA,CAAUx7B,KAAAA,AAAAA,KAAAA,KAAK,MAAA,KAAA,EAAE+B,KAAAA;oBACxB;gBAAA;gB,E,a,GApQW6T,IAAa,EAAA;oBAkCrB,EAAA,GAAA,EAAAxK,eAAAA;oBACA,EAAA,GAAA,EAAAkK,gBAAAA;oBACA,EAAA,GAAA,EAAAjG,kBAAAA;oBACA,EAAA,GAAA,EAAAtG,cAAAA;oBACA,EAAA,GAAA,EAAAoM,mBAAAA;oBACA,EAAA,GAAA,EAAAK,aAAAA;iBAAAA,EAvCQI;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,gB,G,K;gBChBb,MAAA,IAAA,EAAA,OACA,IAA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57BW0Q,IAAgB,EAAA;oBAuDxB,EAAA,GAAA,EAAAjO,cAAAA;oBACA,EAAA,GAAA,EAAA+gB,YAAAA;oBACA,EAAA,GAAA,EAAA1T,aAAAA;oBACA,EAAA,GAAA,EAAAhL,eAAAA;oBACA,EAAA,GAAA,EAAAlM,cAAAA;oBACA,EAAA,GAAA,EAAAiW,mBAAAA;iBAAAA,EA5DQ6B;Y;Y,M,C,G,G;gB,O,c,C,G,c;oB,O,C;gB,I,E,a,G,E,uB,G,E,iB,G,E,c,G,E,a,G,E,mB,G,E,gB,G,K;gBC9Db,MAAA,IAAA,EAAA;gBAGa,EAAA1B,gBAAAA,GAAAA,AAAmB,CAAA,GAAA,EAAAstB,eAAAA,AAAAA,EAAkC,oBAarD,EAAAztB,mBAAAA,GAAAA,AAAsB,CAAA,GAAA,EAAAytB,eAAAA,AAAAA,EAAqC,uBAiB3D,EAAAxsB,aAAAA,GAAAA,AAAgB,CAAA,GAAA,EAAAwsB,eAAAA,AAAAA,EAA+B,iBAQ/C,EAAA1jC,cAAAA,GAAAA,AAAiB,CAAA,GAAA,EAAA0jC,eAAAA,AAAAA,EAAgC,kBAmCjD,EAAA3rB,iBAAAA,GAAAA,AAAoB,CAAA,GAAA,EAAA2rB,eAAAA,AAAAA,EAAmC,qBA6BvD,EAAAjtB,uBAAAA,GAAAA,AAA0B,CAAA,GAAA,EAAAitB,eAAAA,AAAAA,EAAyC,2BASnE,EAAAptB,aAAAA,GAAAA,AAAgB,CAAA,GAAA,EAAAotB,eAAAA,AAAAA,EAA+B;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,Y,G,E,mB,G,K;gBCtH5D,MAAA,IAAA,EAAA,OAGA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MAC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AA,CAAKg2C,UAAAA,CAAW7qC,MAAAA,CAAO9L,GAAG;oCAAA;gC;4B,C,C,GAUjCW,IAAAA,CAAKk2C,MACd;oBAAA;oBAEO,KAAKC,CAAAA,EAASC,CAAAA,EAAAA;wBACnB,MAAMC,IAA2B,EAAA;wBACjC,IAAK,IAAIh3C,IAAI,GAAGA,IAAIW,IAAAA,CAAKg2C,UAAAA,CAAW/0C,MAAAA,EAAQ5B,IAC1Cg3C,EAAMpyC,IAAAA,CAAKjE,IAAAA,CAAKg2C,UAAAA,CAAW32C,EAAAA;wBAE7B,IAAK,IAAIA,IAAI,GAAGA,IAAIg3C,EAAMp1C,MAAAA,EAAQ5B,IAChCg3C,CAAAA,CAAMh3C,EAAAA,CAAGi3C,IAAAA,CAAAA,KAAKzrC,GAAWsrC,GAAMC;oBAEnC;oBAEO,UAAAzsC;wBACL3J,IAAAA,CAAKu2C,cAAAA,IACLv2C,IAAAA,CAAKi2C,SAAAA,GAAAA,CAAY;oBACnB;oBAEO,iBAAAM;wBACDv2C,IAAAA,CAAKg2C,UAAAA,IACPh2C,CAAAA,IAAAA,CAAKg2C,UAAAA,CAAW/0C,MAAAA,GAAS,CAAA;oBAE7B;gBAAA,GAGF,EAAA,YAAA,GAAA,SAAgCu1C,CAAAA,EAAiBC,CAAAA;oBAC/C,OAAOD,EAAK31C,CAAAA,IAAK41C,EAAG/mC,IAAAA,CAAK7O;gBAC3B;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,Y,G,E,wB,G,K;gBCjEA,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MACA,IAAA,EAAA,MACA,IAAA,EAAA,OACA,IAAA,EAAA,OAEA,IAAA,EAAA,MACA,IAAA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BAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAAS;wBAAC;wBAAQ;qBAAA;oBAC7C;wBAAC;wBAAQ;qBAAA;oBAAS;wB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M1tB,kBAAAA,CAAmBlU,GAAI13B;oBAC3C;oBACO,cAAc03B,CAAAA,EAAyB13B,CAAAA,EAAAA;wBAC5C,OAAOxJ,IAAAA,CAAKo1C,kBAAAA,CAAmBlU,GAAI13B;oBACrC;oBACO,mBAAmBqO,CAAAA,EAAenH,CAAAA,EAAAA;wBACvC,OAAO1Q,IAAAA,CAAK8iE,KAAAA,CAAMvtB,kBAAAA,CAAmB19B,GAAOnH;oBAC9C;oBACO,cAAcmH,CAAAA,EAAenH,CAAAA,EAAAA;wBAClC,OAAO1Q,IAAAA,CAAKu1C,kBAAAA,CAAmB19B,GAAOnH;oBACxC;gBAAA;Y;Y,M,C,G;gB,O,c,C,G,c;oB,O,C;gB,I,E,U,G,K,GC3BF,EAAA,UAAA,GAAA;oBACE,YAAoBoyD,CAAAA,CAAAA;wBAAA,IAAA,CAAAA,KAAAA,GAAAA;oBAAwB;oBAErC,SAASU,CAAAA,EAAAA;wBACdxjE,IAAAA,CAAK8iE,KAAAA,CAAM1vB,cAAAA,CAAe/xC,QAAAA,CAASmiE;oBACrC;oBAEA,IAAA,WAAWC;wBACT,OAAOzjE,IAAAA,CAAK8iE,KAAAA,CAAM1vB,cAAAA,CAAeqwB,QACnC;oBAAA;oBAEA,IAAA,gBAAWC;wBACT,OAAO1jE,IAAAA,CAAK8iE,KAAAA,CAAM1vB,cAAAA,CAAeswB,aACnC;oBAAA;oBAEA,IAAA,cAAyB1J,CAAAA,EAAAA;wBACvBh6D,IAAAA,CAAK8iE,KAAAA,CAAM1vB,cAAAA,CAAeswB,aAAAA,GAAgB1J;oBAC5C;gBAAA;Y;Y,K,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,a,G,E,Y,G,E,Y,G,K;gBCpBF,MAAA,IAAA,EA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UxiD,IAAAA,CAAKkkE,SAAAA,CAAUv5B,EAChC;oBAAA;oBAEO,YAAYA,CAAAA,EAAW6X,CAAAA,EAAAA;wBAC5BxiD,IAAAA,CAAKkkE,SAAAA,CAAUv5B,EAAAA,GAAK6X,GAChBxiD,IAAAA,CAAKikE,MAAAA,KAAWt5B,KAClB3qC,CAAAA,IAAAA,CAAKwiD,OAAAA,GAAUA,CAAAA;oBAEnB;gBAAA;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,gB,G,K;gBC5BF,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OAEA,IAAA,EAAA,MAKM2hB,IAA2D;oBAM/DC,MAAM;wBACJhjD,QAAQ;wBACRijD,UAAU,IAAA,CAAM;oBAAA;oBAOlBC,KAAK;wBACHljD,QAAQ;wBACRijD,UAAWxjE,CAAAA,IAEQ,MAAbA,EAAEga,MAAAA,IAAiD,MAAbha,EAAEkf,MAAAA,IAI5Clf,CAAAA,EAAE0f,IAAAA,GAAAA,CAAO,GACT1f,EAAE4f,GAAAA,GAAAA,CAAM,GACR5f,EAAE2C,KAAAA,GAAAA,CAAQ,GAAA,CACH,CAAA;oBAAA;oBAQX+gE,OAAO;wBACLnjD,QAAQ;wBACRijD,UAAWxjE,CAAAA,IAEQ,OAAbA,EAAEkf,MAAAA;oBAAAA;oBAWVykD,MAAM;wBACJpjD,QAAQ;wBACRijD,UAAWxjE,CAAAA,IAEQ,OAAbA,EAAEkf,MAAAA,IAAgD,MAAblf,EAAEga,MAAAA;oBAAAA;oBAW/C4pD,KAAK;wBACHrjD,QACE;wBAEFijD,UAAWxjE,CAAAA,IAAAA,CAAuB;oBAAA;gBAAA;gBAWtC,SAAS6jE,EAAU7jE,CAAAA,EAAoB8jE,CAAAA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;4BAC9B,IAAI6lD,EAAG5lD,GAAAA,KAAQ6lD,EAAG7lD,GAAAA,EAAK,OAAA,CAAO;wB;wBAEhC,OAAI4lD,EAAGrrD,MAAAA,KAAWsrD,EAAGtrD,MAAAA,IACjBqrD,EAAGnmD,MAAAA,KAAWomD,EAAGpmD,MAAAA,IACjBmmD,EAAG3lD,IAAAA,KAAS4lD,EAAG5lD,IAAAA,IACf2lD,EAAGzlD,GAAAA,KAAQ0lD,EAAG1lD,GAAAA,IACdylD,EAAG1iE,KAAAA,KAAU2iE,EAAG3iE,KAEtB;oBAAA;gBAAA;gB,E,gB,GApJW0vC,IAAgB,EAAA;oBAWxB,EAAA,GAAA,EAAA7iC,cAAAA;oBACA,EAAA,GAAA,EAAA+gB,YAAAA;iBAAAA,EAZQ8hB;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,W,G,K;gBCnKb,MAAA,IAAA,EAAA,OACA,IAAA,EAAA,OACA,IAAA,EAAA,MAEA,IAAA,EAAA,OAEMmzB,IAAwBr3D,OAAOy7B,MAAAA,CAAO;oBAC1CkY,YAAAA,CAAY;gBAAA,IAGR2jB,IAA8Ct3D,OAAOy7B,MAAAA,CAAO;oBAChE7oB,uBAAAA,CAAuB;oBACvB4jC,mBAAAA,CAAmB;oBACnB3+C,oBAAAA,CAAoB;oBACpB6gB,QAAAA,CAAQ;oBACRm8B,mBAAAA,CAAmB;oBACnB3qC,WAAAA,CAAW;oBACXwpC,YAAAA,CAAY;gBAAA;gBAGP,IAAMzP,IAAW,EAAA,WAAA,GAAjB,cAA0B,EAAAzzC,UAAAA;oBAiB/B,YACkB,CAAA,EACH,CAAA,EACI,CAAA,CAAA;wBAEjBG,KAAAA,IAJiC,IAAA,CAAAoK,cAAAA,GAAAA,GAC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AC5B;oBAEO,eAAkB4mC,CAAAA,EAAAA,GAAc5f,CAAAA,EAAAA;wBACrC,MAAM6f,IAAAA,AAAsB,CAAA,GAAA,EAAAC,sBAAAA,AAAAA,EAAuBF,GAAMG,IAAAA,CAAK,CAAC7oE,GAAGwrC,IAAMxrC,EAAE0O,KAAAA,GAAQ88B,EAAE98B,KAAAA,GAE9Eo6D,IAAqB,EAAA;wBAC3B,KAAK,MAAMC,KAAcJ,EAAqB;4BAC5C,MAAMJ,IAAU3nE,IAAAA,CAAK4nE,SAAAA,CAAU1+D,GAAAA,CAAIi/D,EAAWjnC,EAAAA;4BAC9C,IAAA,CAAKymC,GACH,MAAM,IAAIjmE,MAAM,CAAA,iBAAA,EAAoBomE,EAAKvC,IAAAA,CAAAA,4BAAAA,EAAmC4C,EAAWjnC,EAAAA,CAAAA,CAAAA,CAAAA;4BAEzFgnC,EAAYjkE,IAAAA,CAAK0jE;wB;wBAGnB,MAAMS,IAAqBL,EAAoB9mE,MAAAA,GAAS,IAAI8mE,CAAAA,CAAoB,EAAA,CAAGj6D,KAAAA,GAAQo6C,EAAKjnD,MAAAA;wBAGhG,IAAIinD,EAAKjnD,MAAAA,KAAWmnE,GAClB,MAAM,IAAI1mE,MAAM,CAAA,6CAAA,EAAgDomE,EAAKvC,IAAAA,CAAAA,aAAAA,EAAoB6C,IAAqB,EAAA,gBAAA,EAAoBlgB,EAAKjnD,MAAAA,CAAAA,iBAAAA,CAAAA;wBAIzI,OAAO,IAAI6mE,KAAQ;+BAAI5f;+BAASggB;yBAAAA;oBAClC;gBAAA;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E,S,G,E,c,G,E,U,G,K;gBC9EF,MAAA,IAAA,EAAA,MACA,IAAA,EAAA,OAgBMG,IAAwD;oBAC5D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ACH,IAAqB,YAAA,OAAV0E,KAAsB,KAAKA,KAASA,KAAS,KAEtD;gCAEFA,IAAQyiE,EAAoBh4D,QAAAA,CAASzK,KAASA,IAAQ,EAAAqiE,eAAAA,CAAgB/mE,EAAAA;gCACtE;4BACF,KAAK;gCACH0E,IAAQmM,KAAKiX,KAAAA,CAAMpjB;4BAErB,KAAK;4BACL,KAAK;gCACH,IAAIA,IAAQ,GACV,MAAM,IAAI5F,MAAM,CAAA,EAAGkB,EAAAA,+BAAAA,EAAqC0E,EAAAA,CAAAA;gCAE1D;4BACF,KAAK;gCACHA,IAAQmM,KAAKG,GAAAA,CAAI,GAAGH,KAAKC,GAAAA,CAAI,IAAID,KAAKmV,KAAAA,CAAc,KAARthB,KAAc;gCAC1D;4BACF,KAAK;gCAEH,IAAA,AADAA,CAAAA,IAAQmM,KAAKC,GAAAA,CAAIpM,GAAO,WAAA,IACZ,GACV,MAAM,IAAI5F,MAAM,CAAA,EAAGkB,EAAAA,+BAAAA,EAAqC0E,EAAAA,CAAAA;gCAE1D;4BACF,KAAK;4BACL,KAAK;gCACH,IAAIA,KAAS,GACX,MAAM,IAAI5F,MAAM,CAAA,EAAGkB,EAAAA,2CAAAA,EAAiD0E,EAAAA,CAAAA;gCAEtE;4BACF,KAAK;4BACL,KAAK;gCACH,IAAA,CAAKA,KAAmB,MAAVA,GACZ,MAAM,IAAI5F,MAAM,CAAA,EAAGkB,EAAAA,yBAAAA,EAA+B0E,EAAAA,CAAAA;gCAEpD;4BACF,KAAK;gCACHA,IAAQA,QAAAA,IAAAA,IAAS,CAAC;wBAAA;wBAGtB,OAAOA;oBACT;gBAAA;gBAxIF,EAAA,cAAA,GAAA;Y;Y,M,S,C,E,C,E,C;gB,I,I,I,I,I,C,U,I,S,C,E,C,E,C,E,C;oB,I,G,I,U,M,E,I,I,I,I,S,I,I,O,wB,C,G,K;oB,I,Y,O,W,c,O,Q,Q,E,I,Q,Q,C,G,G,G;yB,I,I,I,E,M,G,G,K,G,I,A,C,I,C,C,E,A,K,C,I,A,C,I,I,E,K,I,I,E,G,G,K,E,G,E,K,C;oB,O,I,K,K,O,c,C,G,G,I;gB,G,I,I,I,I,C,O,I,S,C,E,C;oB,O,S,C,E,C;wB,E,G,G;oB;gB;gB,O,c,C,G,c;oB,O,C;gB,I,E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","sources":["node_modules/xterm/lib/xterm.js","node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition","node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/OscLinkProvider.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/BufferDecorationRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/ColorZoneStore.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/OverviewRulerRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/WidthCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/RendererUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/ThemeService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Color.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts","node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts","node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/common/MultiKeyMap.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts","node_modules/xterm/lib/webpack:/xterm/src/common/SortedList.ts","node_modules/xterm/lib/webpack:/xterm/src/common/TaskQueue.ts","node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/XParseColor.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/DecorationService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/OscLinkService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts","node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap","node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts"],"sourcesContent":[null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from 'xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        el.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        el.addEventListener('mouseup', eventListeners.mouseup);\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(document);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          text += chars;\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document) {\n    this._container = _document.createElement('div');\n    this._container.style.position = 'absolute';\n    this._container.style.top = '-50000px';\n    this._container.style.width = '50000px';\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n\n    const bold = _document.createElement('span');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _document.body.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from 'xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","a","i","self","AccessibilityManager","Disposable","constructor","_terminal","super","_renderService","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityContainer","document","createElement","classList","add","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_liveRegion","_liveRegionDebouncer","register","TimeBasedDebouncer","_renderRows","bind","element","Error","insertAdjacentElement","onResize","_handleResize","onRender","_refreshRows","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","window","setListener","addDisposableDomListener","toDisposable","remove","MAX_ROWS_TO_READ","shift","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","test","push","refresh","buffer","setSize","lines","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","position","boundaryElement","target","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","removeEventListener","newElement","unshift","scrollLines","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","dimensions","css","cell","height","style","width","canvas","IRenderService","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","optionsService","decPrivateModes","rawOptions","ignoreBracketedPasteMode","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","node","type","handler","options","disposed","dispose","Linkifier2","currentLink","_currentLink","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","undefined","_clearCurrentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","leave","lower","upper","current","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","result","linkHandler","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","open","opener","location","href","console","warn","IOptionsService","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","CoreTerminal","onFocus","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","onWillOpen","_onWillOpen","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_accessibilityManager","MutableDisposable","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","onRequestScrollLines","amount","suppressScrollEvent","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","registerMarker","cursorYOffset","addMarker","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","_onRequestScrollLines","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","getBufferElements","startLine","endLine","cursorElement","currentLine","bufferElements","isWrapped","translateToString","div","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","layer","marker","display","onRenderEmitter","onDispose","delete","anchor","right","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_width","_coreBrowseService","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","parentElement","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_isComposing","_textarea","_coreService","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","SELECTION_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_widthCache","_themeStyleElement","_dimensionsStyleElement","WidthCache","setFont","fontWeight","fontWeightBold","_setDefaultSpacing","letterSpacing","overflow","styles","_terminalSelector","foreground","multiplyOpacity","cursor","cursorAccent","cursorWidth","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","c","INVERTED_DEFAULT_COLOR","opaque","spacing","defaultSpacing","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","replaceChildren","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","cursorAbsoluteY","cursorBlink","cursorStyle","cursorInactiveStyle","rowElement","createRow","_setCellUnderline","enabled","maxY","bufferline","IInstantiationService","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","widthCache","linkStart","linkEnd","elements","joinedRanges","getJoinedCharacters","charElement","getNoBgTrimmedLength","cellAmount","oldBg","oldFg","oldExt","oldLinkHover","oldSpacing","oldIsInSelection","classes","hasHover","isJoined","lastCharX","JoinedCellData","isInSelection","_isCellInSelection","isCursorCell","isLinkHover","isDecorated","forEachDecorationAtCell","d","chars","getChars","WHITESPACE_CELL_CHAR","isUnderline","isOverline","isBold","isItalic","selectionForeground","ext","isCursorHidden","isFocused","isDim","isInvisible","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","textDecoration","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","resolvedBg","isTop","backgroundColorRGB","foregroundColorRGB","_addStyle","padStart","_applyMinimumContrast","className","minimumContrastRatio","excludeFromContrastRatioDemands","getCode","cache","_getContrastCache","adjustedColor","ratio","ensureContrastRatio","halfContrastCache","contrastCache","padChar","_flat","Float32Array","_font","_fontSize","_weight","_weightBold","_measureElements","whiteSpace","fontKerning","regular","bold","italic","fontStyle","boldItalic","body","_holey","fill","font","weight","weightBold","cp","_measure","variant","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","Number","firstCell","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","_renderer","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderDebouncer","RenderDebouncer","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","g","b","toCss","toRgba","_colors","_contrastCache","ColorContrastCache","_halfContrastCache","_onChangeColors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onScrollApi","_windowsWrappingHeuristics","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsPtyOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","scrollAmount","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsPty","buildNumber","backend","windowsMode","_enableWindowsWrappingHeuristics","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","clearListeners","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","getAttrData","_curAttrData","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","prototype","split","clearRange","len","decode","subarray","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_CODE","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","isValidColorIndex","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","f","isProtected","_disposables","unregister","_value","array","_data","third","fourth","navigator","userAgent","platform","isSafari","majorVersion","isIpad","isIphone","_getKey","insert","_search","getKeyIterator","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","_urlId","_ext","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","tabStopWidth","Marker","_removeMarker","$startIndex","fillCellData","_combined","_extendedAttrs","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","_id","isDisposed","_nextId","_onDispose","disposable","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","num","ucs","bisearch","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","next","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","fromArray","k","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","_buffer","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","BufferNamespaceApi","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","getDecorationsAtCell","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","trace","TRACE","info","INFO","ERROR","off","OFF","traceLogger","_logLevel","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","logger","log","_target","descriptor","fn","JSON","stringify","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","DI_TARGET","DI_DEPENDENCIES","serviceRegistry","decorator","arguments","storeServiceDependency","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","_verifyPositiveIntegers","writeln","addon","strings","Infinity"],"version":3,"file":"index.2317e633.js.map","sourceRoot":"/__parcel_source_root/"}